/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizadordemomos;

import OpenCV.Analizador;
import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jairo
 */
public class FrameMenu extends javax.swing.JFrame {
    
    String path="error";

    /**
     * Creates new form FrameMenu
     */
    public FrameMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabelIMAGEN = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelRESULTADOS = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSELECTOR = new javax.swing.JMenuItem();
        jMenuItemANALIZADOR = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analizador de Memes - Jairo Vera");
        setPreferredSize(new java.awt.Dimension(1200, 750));

        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("RESULTADOS:");

        jLabelRESULTADOS.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabelRESULTADOS))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabelRESULTADOS)
                .addContainerGap(536, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");

        jMenuItemSELECTOR.setText("Seleccionar Imagen");
        jMenuItemSELECTOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSELECTORActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSELECTOR);

        jMenuItemANALIZADOR.setText("Analizar");
        jMenuItemANALIZADOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemANALIZADORActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemANALIZADOR);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("HELP");

        jMenuItem1.setText("Como Usar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 967, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelIMAGEN, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIMAGEN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
this.analizar();     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
indicaciones();        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       
       abrirAbout();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItemANALIZADORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemANALIZADORActionPerformed
this.analizar();        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemANALIZADORActionPerformed

    private void jMenuItemSELECTORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSELECTORActionPerformed
this.jLabelRESULTADOS.setText("");
        this.seleccionarArchivo();       // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemSELECTORActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelIMAGEN;
    private javax.swing.JLabel jLabelRESULTADOS;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemANALIZADOR;
    private javax.swing.JMenuItem jMenuItemSELECTOR;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables


    private void indicaciones(){
        String indicaciones ="1.-En la barra de Herramientas seleccione \"Archivo\"\n";
        indicaciones+=       "2.-Seleccione \"Seleccionar imagen\"\n";
        indicaciones+=       "3.-Seleccione la imagen que desea utilizar\n";
        indicaciones+=       "4.-En el panel principal seleccione \"Analizar\"\n";
        JOptionPane.showMessageDialog(null, indicaciones, "How to Use ", JOptionPane.INFORMATION_MESSAGE);
    }
    private void abrirAbout(){
        try {
            File htmlFile = new File("src/miHTML/index.html");
            Desktop.getDesktop().browse(htmlFile.toURI());
        } catch (IOException ex) {
            Logger.getLogger(FrameMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void seleccionarArchivo() {
        JFileChooser file = new JFileChooser();
        FileFilter imageFilter = new FileNameExtensionFilter(
    "Image files", ImageIO.getReaderFileSuffixes());
        file.setAcceptAllFileFilterUsed(false);
        file.addChoosableFileFilter(imageFilter);
        file.showOpenDialog(this);
        File archivo = file.getCurrentDirectory();
        if(archivo!=null){
         
            
                this.path=file.getSelectedFile()+"";
                setIMAGEN(file.getSelectedFile()+"");
            
        }
        else {
            JOptionPane.showMessageDialog(null, "Error en la seleccion de archivo");
            
        }
        
    }
    
    private void setIMAGEN(String url){
         ImageIcon icono =new ImageIcon(url);
    Image imagen = icono.getImage();
    imagen = imagen.getScaledInstance(this.jLabelIMAGEN.getWidth(),this.jLabelIMAGEN.getHeight(), java.awt.Image.SCALE_SMOOTH);
    icono = new ImageIcon(imagen);
  
        this.jLabelIMAGEN.setIcon(icono);
        System.out.println(url);
    }
    
    private void analizar(){
       
        
        System.out.println(this.jLabelRESULTADOS.getText());
        if (path.equals("error"))
            JOptionPane.showMessageDialog(null, "No se ha seleccionado una imagen", "Seleccione una Imagen", JOptionPane.ERROR_MESSAGE);
        else {
             this.jLabelRESULTADOS.setText("ANALIZANDO...");
            
      new Analizador().getPrediccion(path,this);
        
        
        }
    }
    public void setResultado(String ingreso){
        if (ingreso.equals("simeme"))
            this.jLabelRESULTADOS.setText("Si es un meme");
        if (ingreso.equals("nomeme"))
            this.jLabelRESULTADOS.setText("No es meme");
        
    }
}
